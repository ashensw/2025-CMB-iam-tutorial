openapi: 3.0.0
info:
  title: Pizza Shack Agent Chat API
  version: 1.0.0
  description: API for chatting with the Pizza Shack ordering agent, browsing menu, placing orders, and handling authentication callbacks.

servers:
  - url: http://localhost:8000
    description: Local development server

paths:
  /chat:
    post:
      summary: Chat with Pizza Assistant
      description: Send a message to the Pizza Shack assistant for menu browsing and order placement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      responses:
        '200':
          description: Successful response from the assistant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /callback:
    get:
      summary: Authentication callback
      description: Callback endpoint for authentication flow
      parameters:
        - in: query
          name: code
          schema:
            type: string
          required: true
          description: Authentication code
        - in: query
          name: state
          schema:
            type: string
          required: true
          description: State parameter for verification
      responses:
        '200':
          description: Successfully authenticated
          content:
            text/html:
              schema:
                type: string
        '400':
          description: Invalid state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /health:
    get:
      summary: Health check
      description: Check if the API service is running correctly
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy

components:
  schemas:
    ChatRequest:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: The message from the user (e.g., "Show me the menu", "I want to order a Margherita pizza")
        session_id:
          type: string
          description: Optional session ID for maintaining conversation context
          nullable: true

    ChatResponse:
      type: object
      properties:
        response:
          type: string
          description: Text response from the Pizza Shack assistant
        session_id:
          type: string
          description: Session ID for this conversation
        requires_auth:
          type: boolean
          description: Whether authentication is required for the requested action
          default: false
        auth_url:
          type: string
          description: Authentication URL if auth is required
          nullable: true

    Error:
      type: object
      properties:
        detail:
          type: string
          description: Error message

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication